// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gameproto.proto

package pb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GameServer 消息. 统一从100以后开始
type Game_Msg int32

const (
	MSG_None Game_Msg = 0
	// ----- 登陆相关 -----
	MSG_SyncRoleInfo Game_Msg = 1000
)

var Game_Msg_name = map[int32]string{
	0:    "MSG_None",
	1000: "MSG_SyncRoleInfo",
}

var Game_Msg_value = map[string]int32{
	"MSG_None":         0,
	"MSG_SyncRoleInfo": 1000,
}

func (x Game_Msg) String() string {
	return proto.EnumName(Game_Msg_name, int32(x))
}

func (Game_Msg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_56bd982db90ae160, []int{0}
}

// 同步玩家基础信息
type C2S_SyncRoleInfo struct {
	RoleID uint32 `protobuf:"varint,1,opt,name=roleID,proto3" json:"roleID,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *C2S_SyncRoleInfo) Reset()         { *m = C2S_SyncRoleInfo{} }
func (m *C2S_SyncRoleInfo) String() string { return proto.CompactTextString(m) }
func (*C2S_SyncRoleInfo) ProtoMessage()    {}
func (*C2S_SyncRoleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bd982db90ae160, []int{0}
}
func (m *C2S_SyncRoleInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *C2S_SyncRoleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_C2S_SyncRoleInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *C2S_SyncRoleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S_SyncRoleInfo.Merge(m, src)
}
func (m *C2S_SyncRoleInfo) XXX_Size() int {
	return m.Size()
}
func (m *C2S_SyncRoleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S_SyncRoleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2S_SyncRoleInfo proto.InternalMessageInfo

type S2C_SyncRoleInfo struct {
	RoleID uint32 `protobuf:"varint,1,opt,name=roleID,proto3" json:"roleID,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *S2C_SyncRoleInfo) Reset()         { *m = S2C_SyncRoleInfo{} }
func (m *S2C_SyncRoleInfo) String() string { return proto.CompactTextString(m) }
func (*S2C_SyncRoleInfo) ProtoMessage()    {}
func (*S2C_SyncRoleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bd982db90ae160, []int{1}
}
func (m *S2C_SyncRoleInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2C_SyncRoleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2C_SyncRoleInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2C_SyncRoleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C_SyncRoleInfo.Merge(m, src)
}
func (m *S2C_SyncRoleInfo) XXX_Size() int {
	return m.Size()
}
func (m *S2C_SyncRoleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C_SyncRoleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2C_SyncRoleInfo proto.InternalMessageInfo

// ----------------------------- rpc -----------------------------
type S2S_Echo struct {
	Str string `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
}

func (m *S2S_Echo) Reset()         { *m = S2S_Echo{} }
func (m *S2S_Echo) String() string { return proto.CompactTextString(m) }
func (*S2S_Echo) ProtoMessage()    {}
func (*S2S_Echo) Descriptor() ([]byte, []int) {
	return fileDescriptor_56bd982db90ae160, []int{2}
}
func (m *S2S_Echo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *S2S_Echo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_S2S_Echo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *S2S_Echo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2S_Echo.Merge(m, src)
}
func (m *S2S_Echo) XXX_Size() int {
	return m.Size()
}
func (m *S2S_Echo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2S_Echo.DiscardUnknown(m)
}

var xxx_messageInfo_S2S_Echo proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("pb.Game_Msg", Game_Msg_name, Game_Msg_value)
	proto.RegisterType((*C2S_SyncRoleInfo)(nil), "pb.C2S_SyncRoleInfo")
	proto.RegisterType((*S2C_SyncRoleInfo)(nil), "pb.S2C_SyncRoleInfo")
	proto.RegisterType((*S2S_Echo)(nil), "pb.S2S_Echo")
}

func init() { proto.RegisterFile("gameproto.proto", fileDescriptor_56bd982db90ae160) }

var fileDescriptor_56bd982db90ae160 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x4f, 0xcc, 0x4d,
	0x2d, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x03, 0x93, 0x42, 0x4c, 0x05, 0x49, 0x52, 0xba, 0xe9, 0x99,
	0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0xe9, 0xf9, 0xe9, 0xf9, 0xfa, 0x60, 0xa9,
	0xa4, 0xd2, 0x34, 0x30, 0x0f, 0xcc, 0x01, 0xb3, 0x20, 0x5a, 0x94, 0xec, 0xb8, 0x04, 0x9c, 0x8d,
	0x82, 0xe3, 0x83, 0x2b, 0xf3, 0x92, 0x83, 0xf2, 0x73, 0x52, 0x3d, 0xf3, 0xd2, 0xf2, 0x85, 0xc4,
	0xb8, 0xd8, 0x8a, 0x40, 0x6c, 0x17, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xde, 0x20, 0x28, 0x4f, 0x48,
	0x88, 0x8b, 0x25, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x49, 0x81, 0x51, 0x83, 0x33, 0x08, 0xcc, 0x06,
	0xe9, 0x0f, 0x36, 0x72, 0x26, 0x5f, 0xbf, 0x0c, 0x17, 0x47, 0xb0, 0x51, 0x70, 0xbc, 0x6b, 0x72,
	0x46, 0xbe, 0x90, 0x00, 0x17, 0x73, 0x71, 0x49, 0x11, 0x58, 0x13, 0x67, 0x10, 0x88, 0xa9, 0xa5,
	0xcf, 0xc5, 0xe1, 0x9e, 0x98, 0x9b, 0x1a, 0xef, 0x5b, 0x9c, 0x2e, 0xc4, 0xc3, 0xc5, 0xe1, 0x1b,
	0xec, 0x1e, 0xef, 0x97, 0x9f, 0x97, 0x2a, 0xc0, 0x20, 0x24, 0xca, 0x25, 0x00, 0xe2, 0x21, 0xdb,
	0x2b, 0xf0, 0x82, 0xdd, 0x49, 0xe3, 0xc4, 0x43, 0x39, 0x86, 0x0b, 0x0f, 0xe5, 0x18, 0x3e, 0x3c,
	0x94, 0x63, 0x3c, 0xf1, 0x48, 0x8e, 0xf1, 0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x27,
	0x3c, 0x96, 0x63, 0xb8, 0xf0, 0x58, 0x8e, 0xe1, 0xc6, 0x63, 0x39, 0x86, 0x28, 0xa6, 0x82, 0xa4,
	0x24, 0x36, 0xb0, 0xff, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xad, 0x35, 0x32, 0x67, 0x45,
	0x01, 0x00, 0x00,
}

func (this *C2S_SyncRoleInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&pb.C2S_SyncRoleInfo{")
	s = append(s, "RoleID: "+fmt.Sprintf("%#v", this.RoleID)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *S2C_SyncRoleInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&pb.S2C_SyncRoleInfo{")
	s = append(s, "RoleID: "+fmt.Sprintf("%#v", this.RoleID)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *S2S_Echo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&pb.S2S_Echo{")
	s = append(s, "Str: "+fmt.Sprintf("%#v", this.Str)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringGameproto(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *C2S_SyncRoleInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *C2S_SyncRoleInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *C2S_SyncRoleInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintGameproto(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.RoleID != 0 {
		i = encodeVarintGameproto(dAtA, i, uint64(m.RoleID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2C_SyncRoleInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2C_SyncRoleInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2C_SyncRoleInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintGameproto(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.RoleID != 0 {
		i = encodeVarintGameproto(dAtA, i, uint64(m.RoleID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *S2S_Echo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *S2S_Echo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *S2S_Echo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Str) > 0 {
		i -= len(m.Str)
		copy(dAtA[i:], m.Str)
		i = encodeVarintGameproto(dAtA, i, uint64(len(m.Str)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintGameproto(dAtA []byte, offset int, v uint64) int {
	offset -= sovGameproto(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *C2S_SyncRoleInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleID != 0 {
		n += 1 + sovGameproto(uint64(m.RoleID))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGameproto(uint64(l))
	}
	return n
}

func (m *S2C_SyncRoleInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleID != 0 {
		n += 1 + sovGameproto(uint64(m.RoleID))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGameproto(uint64(l))
	}
	return n
}

func (m *S2S_Echo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Str)
	if l > 0 {
		n += 1 + l + sovGameproto(uint64(l))
	}
	return n
}

func sovGameproto(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGameproto(x uint64) (n int) {
	return sovGameproto(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *C2S_SyncRoleInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGameproto
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: C2S_SyncRoleInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: C2S_SyncRoleInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleID", wireType)
			}
			m.RoleID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGameproto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoleID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGameproto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGameproto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGameproto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGameproto(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGameproto
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2C_SyncRoleInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGameproto
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2C_SyncRoleInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2C_SyncRoleInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleID", wireType)
			}
			m.RoleID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGameproto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoleID |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGameproto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGameproto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGameproto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGameproto(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGameproto
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *S2S_Echo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGameproto
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: S2S_Echo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: S2S_Echo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Str", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGameproto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGameproto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGameproto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Str = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGameproto(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGameproto
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGameproto(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGameproto
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGameproto
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGameproto
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGameproto
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGameproto
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGameproto
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGameproto        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGameproto          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGameproto = fmt.Errorf("proto: unexpected end of group")
)
